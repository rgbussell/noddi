./noddi_buildNoddiContainer: called...
./noddi_buildNoddiContainer:  log file is dockerBuild.log
./noddi_buildNoddiContainer:  building a processing environment for noddi...
Sending build context to Docker daemon 557.1 kBSending build context to Docker daemon 1.114 MBSending build context to Docker daemon 1.671 MBSending build context to Docker daemon 2.228 MBSending build context to Docker daemon 2.785 MBSending build context to Docker daemon 3.342 MBSending build context to Docker daemon 3.899 MBSending build context to Docker daemon 4.456 MBSending build context to Docker daemon 5.014 MBSending build context to Docker daemon 5.571 MBSending build context to Docker daemon 6.128 MBSending build context to Docker daemon 6.685 MBSending build context to Docker daemon 7.242 MBSending build context to Docker daemon 7.799 MBSending build context to Docker daemon 8.356 MBSending build context to Docker daemon 8.913 MBSending build context to Docker daemon  9.47 MBSending build context to Docker daemon 10.03 MBSending build context to Docker daemon 10.58 MBSending build context to Docker daemon 11.14 MBSending build context to Docker daemon  11.7 MBSending build context to Docker daemon 12.26 MBSending build context to Docker daemon 12.81 MBSending build context to Docker daemon 13.37 MBSending build context to Docker daemon 13.93 MBSending build context to Docker daemon 14.48 MBSending build context to Docker daemon 15.04 MBSending build context to Docker daemon  15.6 MBSending build context to Docker daemon 16.15 MBSending build context to Docker daemon 16.71 MBSending build context to Docker daemon 17.27 MBSending build context to Docker daemon 17.83 MBSending build context to Docker daemon 18.38 MBSending build context to Docker daemon 18.94 MBSending build context to Docker daemon  19.5 MBSending build context to Docker daemon 20.05 MBSending build context to Docker daemon 20.61 MBSending build context to Docker daemon 21.17 MBSending build context to Docker daemon 21.73 MBSending build context to Docker daemon 22.28 MBSending build context to Docker daemon 22.84 MBSending build context to Docker daemon  23.4 MBSending build context to Docker daemon 23.95 MBSending build context to Docker daemon 24.51 MBSending build context to Docker daemon 25.07 MBSending build context to Docker daemon 25.62 MBSending build context to Docker daemon 26.18 MBSending build context to Docker daemon 26.74 MBSending build context to Docker daemon  27.3 MBSending build context to Docker daemon 27.85 MBSending build context to Docker daemon 28.41 MBSending build context to Docker daemon 28.97 MBSending build context to Docker daemon 29.52 MBSending build context to Docker daemon 30.08 MBSending build context to Docker daemon 30.64 MBSending build context to Docker daemon  31.2 MBSending build context to Docker daemon 31.75 MBSending build context to Docker daemon 32.31 MBSending build context to Docker daemon 32.87 MBSending build context to Docker daemon 33.42 MBSending build context to Docker daemon 33.98 MBSending build context to Docker daemon 34.47 MB
Step 1/11 : FROM rgbussell/noddi_base
 ---> 7980515045c5
Step 2/11 : COPY setupFslEnv /usr/local/bin/
 ---> Using cache
 ---> e04e372e6a26
Step 3/11 : RUN chmod a+x /usr/local/bin/setupFslEnv
 ---> Using cache
 ---> fcea97f276ac
Step 4/11 : ENV NODDI_PATH /usr/local/bin/noddi/
 ---> Using cache
 ---> fc6e50c301cd
Step 5/11 : ENV PATH $NODDI_PATH/:${PATH}
 ---> Using cache
 ---> b2127b71b5e3
Step 6/11 : COPY ./noddi_* $NODDI_PATH
 ---> Using cache
 ---> a6eb135d3c5e
Step 7/11 : RUN chmod a+wx $NODDI_PATH/*
 ---> Using cache
 ---> 7f9ddad1dc35
Step 8/11 : COPY entrypoint.sh /usr/local/bin/entrypoint.sh
 ---> 5759a32df4f6
Removing intermediate container acf5bfd22bcb
Step 9/11 : RUN chmod u+x /usr/local/bin/entrypoint.sh
 ---> Running in dde2a5910d72
 ---> b6d30347896d
Removing intermediate container dde2a5910d72
Step 10/11 : RUN more /usr/local/bin/entrypoint.sh
 ---> Running in 9b18c6cbf833
::::::::::::::
/usr/local/bin/entrypoint.sh
::::::::::::::
#!/bin/bash

#entry point script for the container

# Add local user
# Either use the LOCAL_USER_ID if passed in at runtime or
# fallback

sptMsg="$0:"

USER_ID=${LOCAL_USER_ID:-9001}

USER_NAME=${LOCAL_USER_NAME:user}

USER_GID=${LOCAL_USER_GID:1000}

USER_GID=20

echo "$sptMsg Starting with UID : $USER_ID"
echo "$sptMsg Starting with GID : $USER_GID"

useradd --shell /bin/tcsh -u $USER_ID -G $USER_GID -o -c "" -m $USER_NAME

export HOME=/home/$USER_NAME

chown $USER_NAME /home/$USER_NAME

cd $HOME/data

if [[ -d "Study01" ]]; then
chown $USER_NAME . -R
chgrp $USER_GID . -R
exec /usr/local/bin/gosu $USER_NAME /bin/bash
#exec /usr/local/bin/gosu $USER_NAME noddi_main
else
echo this does not look like a noddi data dir -- container exiting
exit
fi

exit
#exec /usr/local/bin/gosu $USER_NAME /bin/bash

#exec /usr/local/bin/gosu $USER_NAME noddi_main

#exec /usr/local/bin/gosu user "$@"

#adduser --disabled-password --gecos '' noddiuser
#adduser pipelineuser sudo
#echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
#su -m r -c /home/noddiuser/script.sh
 ---> 9e691fe3a2d9
Removing intermediate container 9b18c6cbf833
Step 11/11 : ENTRYPOINT /usr/local/bin/entrypoint.sh
 ---> Running in c7cd73a92c33
 ---> fc9472116276
Removing intermediate container c7cd73a92c33
Successfully built fc9472116276
Successfully tagged noddi:latest
