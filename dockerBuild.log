noddi_buildNoddiContainer: called...
noddi_buildNoddiContainer:  log file is dockerBuild.log
noddi_buildNoddiContainer:  building a processing environment for noddi...
Sending build context to Docker daemon 557.1 kBSending build context to Docker daemon 1.114 MBSending build context to Docker daemon 1.671 MBSending build context to Docker daemon 2.228 MBSending build context to Docker daemon 2.785 MBSending build context to Docker daemon 3.342 MBSending build context to Docker daemon 3.899 MBSending build context to Docker daemon 4.456 MBSending build context to Docker daemon 5.014 MBSending build context to Docker daemon 5.571 MBSending build context to Docker daemon 6.128 MBSending build context to Docker daemon 6.685 MBSending build context to Docker daemon 7.242 MBSending build context to Docker daemon 7.799 MBSending build context to Docker daemon 8.356 MBSending build context to Docker daemon 8.913 MBSending build context to Docker daemon  9.47 MBSending build context to Docker daemon 10.03 MBSending build context to Docker daemon 10.58 MBSending build context to Docker daemon 11.14 MBSending build context to Docker daemon  11.7 MBSending build context to Docker daemon 12.26 MBSending build context to Docker daemon 12.81 MBSending build context to Docker daemon 13.37 MBSending build context to Docker daemon 13.93 MBSending build context to Docker daemon 14.48 MBSending build context to Docker daemon 15.04 MBSending build context to Docker daemon  15.6 MBSending build context to Docker daemon 16.15 MBSending build context to Docker daemon 16.71 MBSending build context to Docker daemon 17.27 MBSending build context to Docker daemon 17.83 MBSending build context to Docker daemon 18.38 MBSending build context to Docker daemon 18.94 MBSending build context to Docker daemon  19.5 MBSending build context to Docker daemon 20.05 MBSending build context to Docker daemon 20.61 MBSending build context to Docker daemon 21.17 MBSending build context to Docker daemon 21.73 MBSending build context to Docker daemon 22.28 MBSending build context to Docker daemon 22.84 MBSending build context to Docker daemon  23.4 MBSending build context to Docker daemon 23.95 MBSending build context to Docker daemon 24.51 MBSending build context to Docker daemon 25.07 MBSending build context to Docker daemon 25.62 MBSending build context to Docker daemon 26.18 MBSending build context to Docker daemon 26.74 MBSending build context to Docker daemon  27.3 MBSending build context to Docker daemon 27.85 MBSending build context to Docker daemon 28.41 MBSending build context to Docker daemon 28.97 MBSending build context to Docker daemon 29.52 MBSending build context to Docker daemon 30.08 MBSending build context to Docker daemon 30.64 MBSending build context to Docker daemon  31.2 MBSending build context to Docker daemon 31.75 MBSending build context to Docker daemon 32.31 MBSending build context to Docker daemon 32.87 MBSending build context to Docker daemon 33.42 MBSending build context to Docker daemon 33.98 MBSending build context to Docker daemon 34.54 MBSending build context to Docker daemon 34.62 MB
Step 1 : FROM rgbussell/noddi_base
 ---> 7980515045c5
Step 2 : COPY setupFslEnv /usr/local/bin/
 ---> Using cache
 ---> bf5af1ae0a90
Step 3 : RUN chmod a+x /usr/local/bin/setupFslEnv
 ---> Using cache
 ---> 109923980851
Step 4 : ENV NODDI_PATH /usr/local/bin/noddi/
 ---> Using cache
 ---> a6447463c57a
Step 5 : ENV PATH $NODDI_PATH/:${PATH}
 ---> Using cache
 ---> ae5ec05fc7bd
Step 6 : COPY ./noddi_* $NODDI_PATH
 ---> Using cache
 ---> f0cb944b029f
Step 7 : RUN chmod a+wx $NODDI_PATH/*
 ---> Using cache
 ---> 563c7bd1b77c
Step 8 : COPY entrypoint.sh /usr/local/bin/entrypoint.sh
 ---> 57dd8c87b847
Removing intermediate container 33ae1cd86364
Step 9 : RUN chmod u+x /usr/local/bin/entrypoint.sh
 ---> Running in 850d0a4950b2
 ---> 27fc62aa93c2
Removing intermediate container 850d0a4950b2
Step 10 : RUN more /usr/local/bin/entrypoint.sh
 ---> Running in 1e0a0bfd0b00
::::::::::::::
/usr/local/bin/entrypoint.sh
::::::::::::::
#!/bin/bash

#entry point script for the container

# Add local user
# Either use the LOCAL_USER_ID if passed in at runtime or
# fallback

sptMsg="$0:"

USER_ID=${LOCAL_USER_ID:-9001}

USER_NAME=${LOCAL_USER_NAME:user}

echo "$sptMsg Starting with UID : $USER_ID"

useradd --shell /bin/tcsh -u $USER_ID -o -c "" -m $USER_NAME
export HOME=/home/$USER_NAME

chown $USER_NAME /home/$USER_NAME

cd $HOME/data

if [[ -d "Study01" ]]; then
chown $USER_NAME . -R
#exec /usr/local/bin/gosu $USER_NAME /bin/bash
exec /usr/local/bin/gosu $USER_NAME noddi_main
else
echo this does not look like a noddi data dir -- container exiting
exit
fi

exit
#exec /usr/local/bin/gosu $USER_NAME /bin/bash

#exec /usr/local/bin/gosu $USER_NAME noddi_main

#exec /usr/local/bin/gosu user "$@"

#adduser --disabled-password --gecos '' noddiuser
#adduser pipelineuser sudo
#echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
#su -m r -c /home/noddiuser/script.sh
 ---> f230e4adbeb9
Removing intermediate container 1e0a0bfd0b00
Step 11 : ENTRYPOINT /usr/local/bin/entrypoint.sh
 ---> Running in db196a6fb5a8
 ---> 02e1b1cdf906
Removing intermediate container db196a6fb5a8
Successfully built 02e1b1cdf906
